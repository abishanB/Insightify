{"ast":null,"code":"var _jsxFileName = \"/Users/abishan/Desktop/ReactProjects/Insightify/client/src/PlaylistsPage/LineChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport { CategoryScale } from \"chart.js\";\nimport \"./styles/LineChart.css\";\nimport testData from \"./output.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nfunction createDataSets() {\n  const colors = [\"rgba(75, 192, 192, 1)\",\n  // Aqua\n  \"#FF5733\",\n  // Vibrant Red\n  \"#33FF57\",\n  // Bright Green\n  \"#3357FF\",\n  // Vibrant Blue\n  \"#F39C12\",\n  // Orange\n  \"#8E44AD\",\n  // Purple\n  \"#1ABC9C\",\n  // Teal\n  \"#E74C3C\",\n  // Soft Red\n  \"#3498DB\",\n  // Soft Blue\n  \"#9B59B6\",\n  // Lavender\n  \"#2ECC71\" // Emerald Green\n  ];\n  let graphLabels = Object.keys(testData[Object.keys(testData)[0]]);\n  let graphDataSets = [];\n  Object.entries(testData).forEach(([key, value]) => {\n    graphDataSets.push({\n      label: key,\n      data: Object.values(value),\n      // Y-axis data\n      borderColor: colors[0],\n      // Line color\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n      // Fill under the line\n      borderWidth: 2,\n      tension: 0.3 // Smooth curves\n    });\n    colors.shift();\n  });\n  const data = {\n    labels: graphLabels,\n    // X-axis labels\n    datasets: graphDataSets\n  };\n  return data;\n}\nexport default function LineChart() {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          boxWidth: 24,\n          color: \"#b3b7bd\",\n          font: {\n            size: 12\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: \"#F2F4F7\" // Change X-axis font color\n        },\n        title: {\n          display: true\n        }\n      },\n      y: {\n        ticks: {\n          color: \"#F2F4F7\" // Change Y-axis font color\n        },\n        title: {\n          display: true,\n          color: \"#F2F4F7\" // Change Y-axis title color\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"line-chart-card\",\n    className: \"playlist-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-title\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Playlist Evolution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: createDataSets(),\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","Line","CategoryScale","testData","jsxDEV","_jsxDEV","register","createDataSets","colors","graphLabels","Object","keys","graphDataSets","entries","forEach","key","value","push","label","data","values","borderColor","backgroundColor","borderWidth","tension","shift","labels","datasets","LineChart","options","responsive","plugins","legend","position","boxWidth","color","font","size","scales","x","ticks","title","display","y","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abishan/Desktop/ReactProjects/Insightify/client/src/PlaylistsPage/LineChart.js"],"sourcesContent":["import React from \"react\";\n\nimport Chart from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport { CategoryScale } from \"chart.js\";\nimport \"./styles/LineChart.css\";\nimport testData from \"./output.json\";\nChart.register(CategoryScale);\n\n\nfunction createDataSets() {\n  const colors = [\n    \"rgba(75, 192, 192, 1)\", // Aqua\n    \"#FF5733\", // Vibrant Red\n    \"#33FF57\", // Bright Green\n    \"#3357FF\", // Vibrant Blue\n    \"#F39C12\", // Orange\n    \"#8E44AD\", // Purple\n    \"#1ABC9C\", // Teal\n    \"#E74C3C\", // Soft Red\n    \"#3498DB\", // Soft Blue\n    \"#9B59B6\", // Lavender\n    \"#2ECC71\"  // Emerald Green\n];\n  let graphLabels = Object.keys(testData[Object.keys(testData)[0]]);\n\n  let graphDataSets = [];\n  Object.entries(testData).forEach(([key, value]) => {\n    graphDataSets.push({\n      label: key,\n      data: Object.values(value), // Y-axis data\n      borderColor: colors[0], // Line color\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\", // Fill under the line\n      borderWidth: 2,\n      tension: 0.3, // Smooth curves\n    });\n    colors.shift();\n  });\n  const data = {\n    labels: graphLabels, // X-axis labels\n    datasets: graphDataSets,\n  };\n\n  return data;\n}\n\nexport default function LineChart() {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          boxWidth: 24,\n          color: \"#b3b7bd\",\n          font: {\n            size: 12,\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: \"#F2F4F7\", // Change X-axis font color\n        },\n        title: {\n          display: true,\n        },\n      },\n      y: {\n        ticks: {\n          color: \"#F2F4F7\", // Change Y-axis font color\n        },\n        title: {\n          display: true,\n          color: \"#F2F4F7\", // Change Y-axis title color\n        },\n      },\n    },\n  };\n  return (\n    <div id=\"line-chart-card\" className=\"playlist-card\">\n      <div className=\"card-title\">\n        <span>Playlist Evolution</span>\n      </div>\n\n      <Line data={createDataSets()} options={options} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}