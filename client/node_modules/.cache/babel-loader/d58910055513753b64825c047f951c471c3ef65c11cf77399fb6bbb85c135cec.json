{"ast":null,"code":"var _jsxFileName = \"/Users/abishan/Desktop/ReactProjects/Insightify/client/src/PlaylistsPage/DisplayPlaylists.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { getEndpointResult } from '../apiCalls.js';\nimport LoadingIcon from '../components/LoadingIcon.js';\nimport './styles/DisplayPlaylists.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction removeSpotifyPlaylists(playlistsObj) {\n  //removes spotify dj & spotify playlists which return as null\n  for (var i = playlistsObj.length - 1; i >= 0; i--) {\n    //remove spotify generated playlists, ie\n    if (playlistsObj[i] == null) {\n      //if playlist is null, playlists created by spotify return\n      playlistsObj.splice(i, 1);\n      continue;\n    }\n    if (playlistsObj[i].name === \"DJ\") {\n      playlistsObj.splice(i, 1);\n    }\n  }\n  return playlistsObj;\n}\nexport function playlistCoverURL(playlist) {\n  //check if playlist cover is given and render cover\n  const noCoverURL = 'https://community.spotify.com/t5/image/serverpage/image-id/55829iC2AD64ADB887E2A5/image-size/large?v=v2&px=999';\n  if (playlist.images === null) {\n    //if playlist cover is not provided\n    return noCoverURL;\n  }\n  return playlist.images[0].url;\n}\nfunction renderPlaylists(playlists) {\n  //jsx for playlist buttons\n  const playlistsLstHTML = Object.entries(playlists).map(([key, playlist]) => /*#__PURE__*/_jsxDEV(Link, {\n    className: \"playlist-item\",\n    to: `/playlists/${playlist.id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: playlistCoverURL(playlist),\n      className: \"playlist-cover\",\n      alt: \"playlistImg\",\n      loading: \"lazy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"playlist-name\",\n      children: playlist.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this));\n  return playlistsLstHTML;\n}\nexport default function DisplayPlaylists({\n  token,\n  storedUserPlaylists,\n  updateUserPlaylistsFunc\n}) {\n  _s();\n  const [playlists, setPlaylists] = useState(storedUserPlaylists);\n  const [error, setError] = useState(false);\n  const firstUpdate = useRef(true); //check if component has initially rendered\n  const maxPlaylists = 100;\n  if (error) {\n    throw new Error(\"Can't fetch user playlists\");\n  }\n  useEffect(() => {\n    //on page load\n    if (playlists.length !== 0) {\n      return;\n    }\n    let playlistPerCallLimit = 50; //number of playlists to get each call, max 50 \n    let userPlaylistsEndpoint = `https://api.spotify.com/v1/me/playlists?limit=${playlistPerCallLimit}`; //inital endpoint to get user playlists\n    let likedSongsPlaylist = {\n      id: 'liked_songs',\n      name: \"Liked Songs\",\n      images: [{\n        url: 'https://misc.scdn.co/liked-songs/liked-songs-300.png'\n      }]\n    };\n    getPlaylists([likedSongsPlaylist], userPlaylistsEndpoint); //pass empty lst for inital set of playlists\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    //pass playlists to parent component to store to prevent unnessecary api calls\n    if (firstUpdate.current) {\n      //dont run this effect on inital render\n      firstUpdate.current = false;\n      return;\n    }\n    updateUserPlaylistsFunc(playlists);\n    // eslint-disable-next-line\n  }, [playlists]);\n  function getPlaylists(playlistsArr, nextEndpoint) {\n    //if next endpoint doesnt exist set state and return func\n    //else make a api call to the endpoint then call function again while adding to the list of tracks\n    if (nextEndpoint === null || playlistsArr >= maxPlaylists) {\n      //only return up to 100 playlists\n      setPlaylists(removeSpotifyPlaylists(playlistsArr));\n      return;\n    }\n    const promise = getEndpointResult(token, nextEndpoint, \"fetching user playlists\");\n    promise.then(function (playlistsObj) {\n      if (playlistsObj === false) {\n        setError(true);\n        return;\n      }\n      getPlaylists(playlistsArr.concat(playlistsObj.items), playlistsObj.next);\n    });\n  }\n  if (playlists == null || playlists.length === 0) {\n    //loading effect if api call not finished\n    return /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Your Playlists (\", playlists.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-container\",\n      children: renderPlaylists(playlists)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayPlaylists, \"fF89ddr1NTZLLkFDk/0LqmLS7ac=\");\n_c = DisplayPlaylists;\nvar _c;\n$RefreshReg$(_c, \"DisplayPlaylists\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getEndpointResult","LoadingIcon","Link","jsxDEV","_jsxDEV","removeSpotifyPlaylists","playlistsObj","i","length","splice","name","playlistCoverURL","playlist","noCoverURL","images","url","renderPlaylists","playlists","playlistsLstHTML","Object","entries","map","key","className","to","id","children","src","alt","loading","fileName","_jsxFileName","lineNumber","columnNumber","DisplayPlaylists","token","storedUserPlaylists","updateUserPlaylistsFunc","_s","setPlaylists","error","setError","firstUpdate","maxPlaylists","Error","playlistPerCallLimit","userPlaylistsEndpoint","likedSongsPlaylist","getPlaylists","current","playlistsArr","nextEndpoint","promise","then","concat","items","next","Fragment","style","height","_c","$RefreshReg$"],"sources":["/Users/abishan/Desktop/ReactProjects/Insightify/client/src/PlaylistsPage/DisplayPlaylists.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { getEndpointResult } from '../apiCalls.js';\nimport LoadingIcon from '../components/LoadingIcon.js'\nimport './styles/DisplayPlaylists.css'; \nimport { Link } from 'react-router-dom';\n\nfunction removeSpotifyPlaylists(playlistsObj){//removes spotify dj & spotify playlists which return as null\n  for (var i = playlistsObj.length - 1; i >= 0; i--) {//remove spotify generated playlists, ie\n    if (playlistsObj[i] == null){//if playlist is null, playlists created by spotify return\n      playlistsObj.splice(i, 1)\n      continue\n    }\n    if (playlistsObj[i].name===\"DJ\") { \n      playlistsObj.splice(i, 1);\n    }\n  }\n  return playlistsObj\n}\n\nexport function playlistCoverURL(playlist){//check if playlist cover is given and render cover\n  const noCoverURL='https://community.spotify.com/t5/image/serverpage/image-id/55829iC2AD64ADB887E2A5/image-size/large?v=v2&px=999'\n  if (playlist.images===null){//if playlist cover is not provided\n    return noCoverURL\n  }\n  return playlist.images[0].url\n}\n\nfunction renderPlaylists(playlists) {//jsx for playlist buttons\n  const playlistsLstHTML = Object.entries(playlists).map(([key, playlist]) =>\n    <Link className=\"playlist-item\" key={key} to={`/playlists/${playlist.id}`}>\n      <img src={playlistCoverURL(playlist)} className='playlist-cover' alt=\"playlistImg\" loading='lazy'/>\n      <span className='playlist-name'>{playlist.name}</span>\n    </Link>\n  )\n  return playlistsLstHTML\n}\n\nexport default function DisplayPlaylists({token, storedUserPlaylists, updateUserPlaylistsFunc }) {\n  const [playlists, setPlaylists] = useState(storedUserPlaylists)\n  const [error, setError] = useState(false)\n  const firstUpdate = useRef(true);//check if component has initially rendered\n  const maxPlaylists = 100;\n  if (error){throw new Error(\"Can't fetch user playlists\")}\n\n  useEffect(() => {//on page load\n    if (playlists.length!==0){return}\n\n    let playlistPerCallLimit = 50;//number of playlists to get each call, max 50 \n    let userPlaylistsEndpoint = `https://api.spotify.com/v1/me/playlists?limit=${playlistPerCallLimit}` //inital endpoint to get user playlists\n    let likedSongsPlaylist = {\n      id: 'liked_songs',\n      name: \"Liked Songs\",\n      images: [{url: 'https://misc.scdn.co/liked-songs/liked-songs-300.png'}]\n    }\n    getPlaylists([likedSongsPlaylist], userPlaylistsEndpoint)//pass empty lst for inital set of playlists\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {//pass playlists to parent component to store to prevent unnessecary api calls\n    if (firstUpdate.current) {//dont run this effect on inital render\n      firstUpdate.current = false;\n      return;}\n    updateUserPlaylistsFunc(playlists)\n    // eslint-disable-next-line\n  }, [playlists]);\n\n  function getPlaylists(playlistsArr, nextEndpoint){\n    //if next endpoint doesnt exist set state and return func\n    //else make a api call to the endpoint then call function again while adding to the list of tracks\n    if (nextEndpoint === null || playlistsArr >= maxPlaylists) {//only return up to 100 playlists\n      setPlaylists(removeSpotifyPlaylists(playlistsArr))\n      return\n    }\n    \n    const promise = getEndpointResult(token, nextEndpoint, \"fetching user playlists\")\n    promise.then(function(playlistsObj) {\n      if (playlistsObj === false){\n        setError(true)\n        return\n      }\n      getPlaylists(playlistsArr.concat(playlistsObj.items), playlistsObj.next)\n    });\n  }\n \n  if (playlists==null || playlists.length === 0){//loading effect if api call not finished\n    return (<LoadingIcon />)\n  }  \n\n  return (\n    <React.Fragment>\n      <div className='page-title'>\n        <h1>Your Playlists ({playlists.length})</h1>\n      </div> \n           \n      <div className=\"playlist-container\">\n        {renderPlaylists(playlists)}\n      </div>\n      <div  style={{height: 20}}></div>\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}